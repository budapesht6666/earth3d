# Product Requirements Document (PRD)

## 1) Краткое описание

Одностраничное веб‑приложение отображает вращающуюся 3D‑сферу (Землю) с нанесёнными границами всех современных стран. Масштабирование — колесом мыши. При наведении курсора на страну вращение приостанавливается и показывается подсказка с информацией о стране.

## 2) Цели и KPI

* **Цель:** Дать пользователю быстрый интерактивный способ обозревать карту мира на 3D‑сфере в браузере.
* **KPI:**

  * TTI ≤ 2.5 c на десктопе (быстрый канал), ≤ 4 c на среднем мобильном.
  * Средний FPS ≥ 50 на десктопе среднего класса.
  * Ошибки рендера (WebGL context lost) < 0.5% сессий.
  * Взаимодействия: ≥ 70% пользователей совершают ≥1 зум или ховер.

## 3) Целевая аудитория и платформы

* **Аудитория:** студенты, преподаватели, любители географии, посетители промо‑страниц.
* **Платформы:** современные десктоп‑браузеры (Chrome, Edge, Firefox, Safari). **Мобильные** — как желательное, но не критичное для MVP (см. раздел 16).

## 4) Основные пользовательские сценарии

1. Пользователь открывает страницу, видит плавно вращающуюся Землю.
2. Пользователь крутит колесо мыши для увеличения/отдаления.
3. Пользователь наводит курсор на страну → вращение останавливается, появляется тултип с названием страны (и опц. кодом ISO‑A3).
4. Пользователь уводит курсор → вращение возобновляется через задержку (напр., 1–2 с).

## 5) Объём (Scope)

**Включено в MVP:**

* 3D‑сфера с текстурой/материалом океанов и оверлеем границ стран.
* Автовращение с регулируемой скоростью.
* Зум колесом мыши.
* Наведение → пауза вращения + тултип (локализуемое название страны, ISO‑код, площадь/население — опционально, если данные доступны в наборе).
* Простая панель настроек (иконка ⚙️): скорость вращения (0–100%), переключатель покоя при ховере, чувствительность зума.

**Вне MVP:**

* Перемещение (drag‑rotate) и инерционное вращение пользовательским вводом.
* Мультитач (pinch/rotate), мобильная адаптация, AR.
* Ночные огни, высотная карта, облака, рельеф.
* Поиск по названию страны, подсветка региона.

## 6) Функциональные требования

* **Автовращение Земли:** старт при загрузке; ось Y по умолчанию; скорость 0.3–1.5°/кадр (настраиваемая).
* **Зум колесом:** экспоненциальный, пределы FOV 25°–75° **или** расстояние камеры \[Rmin, Rmax]; зум не должен «пролетать» внутрь модели.
* **Наведение/хит‑тест:** точное определение полигона страны по координате луча (raycast) → подсветка контура страны и показ тултипа.
* **Пауза вращения:** при первом попадании курсора по стране; возобновление через N мс после ухода курсора или при закрытии тултипа.
* **Тултип:** фиксирован у курсора; содержит локализованное название, ISO‑A3; анимация появления ≤ 150 мс.
* **Границы стран:** корректная отрисовка многочастных полигонов (архипелаги), дыры (Polygons/MultiPolygons).

## 7) Нефункциональные требования

* **Производительность:**

  * 60 FPS цель; деградация graceful на слабых GPU (отключение тени/GLAA, упрощённые геометрии LOD).
  * Ограничение числа треугольников для оверлея — ≤ 200k в кадре в среднем.
* **Размер бандла:** ≤ 600 КБ gzipped для приложения без данных; данные стран грузятся отдельно (lazy).
* **Кросс‑браузерность:** последние 2 версии основных браузеров.
* **Доступность:**

  * Фокусируемые контролы; тултип объявляется через `aria-describedby`.
  * Переключатель «сниженное движение» — отключает автовращение при предпочитаемом `prefers-reduced-motion`.
* **Локализация:** минимум EN/RU; названия стран подставляются из словаря с ISO‑кодами.
* **Безопасность:** только статические ассеты, без пользовательских данных.

## 8) Данные

* **Источник геометрии:** TopoJSON/GeoJSON границ стран (напр., Natural Earth 1:110m/1:50m). Потребуется препроцессинг: упрощение (simplify), мердж/исправление топологии.
* **Атрибуты:** `name_en`, `name_ru`, `iso_a3`, `pop_est` (опц.).
* **Формат поставки в клиент:** сжатый TopoJSON (gzip/brotli) ≤ 500 КБ для 1:110m; возможность подгружать 1:50m при зуме.

## 9) Визуальный дизайн и поведение

* **Сфера:** радиус 1.0, ламберт/физический материал без тяжёлых отражений; базовый окрашенный океан или легкая диффузная текстура вод.
* **Границы:** тонкие линии (1–1.5 px экранные, screen‑space) + полупрозрачная заливка при ховере.
* **Подсветка при ховере:** изменение толщины контура и/или цвета.
* **Тултип:** контрастная карточка, тень 4dp, задержка появления 100–150 мс.

## 10) Технологический стек

* **3D‑движок:** `Three.js` (стабильный экосистемный стандарт). Альтернатива: `Babylon.js`.
* **UI/React‑интеграция (рекомендовано):** `React` + `@react-three/fiber` + `@react-three/drei` для орбиты/камеры/хелперов.
* **Геоданные:** `topojson-client`, `d3-geo` для преобразований, собственная функция проекции lat/lon → XYZ на сферу.
* **Сборка:** Vite или Next.js (если нужен SSR оболочки).

## 11) Архитектура

* **Слои:**

  1. **Core 3D:** сцена, камера, свет, сфера Земли.
  2. **Overlay:** геометрия стран как `BufferGeometry` (линии/поверхности) с ускоренным пиккингом.
  3. **Interaction:** raycaster, обработка колесика, состояние паузы/вращения.
  4. **UI:** панель настроек, тултип, локализация.
* **Состояние:** легковесный стор (Zustand/Context). Отдельные атомы: `rotationSpeed`, `isPaused`, `hoveredCountryId`.
* **Оптимизации:** инстансинг/мердж геометрий, screen‑space линии, requestAnimationFrame с динамическим `delta`.

## 12) Детали реализации ключевых функций

* **Raycast по странам:**

  * Вариант A — прямая геометрия полигонов на сфере → обычный raycast по треугольникам.
  * Вариант B — GPU‑пиккинг: скрытый рендер пасс с уникальным цветом на страну; чтение пикселя под курсором.
  * Для MVP достаточно варианта A при разумной детализации.
* **Пауза вращения:** состояние «pausedByHover»; таймер возобновления 1000–2000 мс.
* **Зум:** колесо → изменение `camera.fov` (пересчитать проекцию) или `camera.position.z` по экспоненте; клампы.

## 13) Аналитика событий

* `app_loaded`, `fps_bucket`, `wheel_zoom` (delta, zoomLevel), `hover_country` (iso3), `settings_change`.

## 14) Локализация

* Языковой пакет JSON: `en`, `ru`; соответствие ISO‑кодов к названиям.
* Автовыбор по `navigator.language`, переключатель в UI (иконка 🌐).

## 15) Тестирование

* **Юнит‑тесты:** трансформации координат, поиск страны по `iso_a3`.
* **E2E:**

  * Вращение стартует автоматически.
  * Колесо мыши изменяет масштаб в пределах.
  * Наведение на Францию → тултип «France/Франция», вращение остановлено.
  * Увод курсора → возобновление вращения после задержки.
* **Производительные тесты:** средний FPS на тестовой машине; размер бандла; время парсинга TopoJSON.

## 16) Дорожная карта релиза

* **MVP (1–2 спринта):**

  * Сцена, сфера, автовращение.
  * Зум колесом.
  * Загрузка TopoJSON 1:110m, raycast, тултип, локализация EN/RU.
  * Панель настроек.
* **v1.1:** экранные линии, улучшенный пиккинг (GPU), упрощение геометрии (LOD).
* **v1.2 (мобайл):** поддержка drag/pinch, адаптивный UI, производительные пресеты.

## 17) Риски и планы обхода

* **Тяжёлые геоданные → низкий FPS.** Решение: упрощение (topojson‑simplify), LOD, GPU‑пиккинг.
* **Точность полигона vs. производительность.** Баланс уровня детализации.
* **WebGL context lost.** Ловить событие, предлагать восстановление сцены.
* **Различия в `wheel` событиях браузеров.** Нормализация дельты (Line/Pixel/Page).

## 18) Критерии приёмки (Acceptance)

* Страница загружается ≤ 3 c на десктопе, первый кадр Земли виден.
* Земля вращается плавно (без дерганий) на тестовом ПК.
* Зум колесом работает в пределах, камера не проходит «сквозь» Землю.
* Наведение на любую из 190+ стран стабильно выдаёт тултип ≤ 150 мс.
* При ховере вращение останавливается и возобновляется после ухода курсора.

## 19) Метрики качества кода

* ESLint + Prettier, строгий TypeScript (если используется React‑стек).
* Lighthouse Performance ≥ 80 на десктопе.

## 20) Открытые вопросы

* Нужны ли дополнительные данные в тултипе (столица, население)? Источник/лицензия.
* Предпочтительный язык/фреймворк оболочки (чистый TS/Vite vs Next.js)?
* Требуется ли офлайн‑режим/кеширование (Service Worker)?
* Нужна ли тёмная тема UI?
